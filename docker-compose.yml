version: "3.3"

services:
  mongo:
    container_name: mongo
    image: mongo:4.2.3-bionic
    hostname: mongo
    restart: always
    expose:
      - "27017"
    volumes:
      # Old path for the volume, prior to using a proper docker volume
      # - "~/scv2/volumes/mongo:/data/db"
      - mongodata:/data/db
    networks:
      - internal_network

  dbserver:
    container_name: dbserver
    image: pacefactory/dbserver
    hostname: dbserver
    restart: always
    depends_on:
      - mongo
    stdin_open: true
    tty: true
    environment:
      - "MONGO_HOST=mongo"
    ports:
      - "8050:8050"
    volumes:
      - "dbserver-data:/home/scv2/volume"
    networks:
      - internal_network
      - external_network

  realtime:
    container_name: realtime
    image: pacefactory/realtime
    hostname: realtime
    restart: always
    stdin_open: true
    tty: true
    environment:
      - "DBSERVER_HOST=dbserver"
    ports:
      - "8181:8181"
    volumes:
      - "realtime-data:/home/scv2/locations"
    networks:
      - external_network

  relational_dbserver:
    container_name: relational_dbserver
    image: pacefactory/relational-dbserver
    profiles: ["rdb"]
    hostname: relational_dbserver
    restart: always
    ports:
      - "8282:8282"
    volumes:
      - "relational_dbserver-data:/home/scv2/volume"
    networks:
      - external_network

  webgui:
    container_name: webgui
    # TODO: Revert to latest-master upon merge into main
    image: pacefactory/safety-gui2-js:frontend-ui-config
    hostname: webgui
    restart: always
    depends_on:
      - dbserver
      - service_gifwrapper
      - service_dtreeserver
    ports:
      - "81:80"
    volumes:
      - "webgui-data:/home/scv2/volume"
    networks:
      - external_network

  service_gifwrapper:
    container_name: service_gifwrapper
    image: pacefactory/service-gifwrapper
    restart: always
    depends_on:
      - dbserver
    environment:
      - "DBSERVER_HOST=dbserver"
    ports:
      - "7171:7171"
    networks:
      - external_network

  service_dtreeserver:
    container_name: service_dtreeserver
    image: pacefactory/service-dtreeserver
    restart: always
    depends_on:
      - dbserver
    environment:
      - "DBSERVER_HOST=dbserver"
    ports:
      - "7272:7272"
    volumes:
      - "service_dtreeserver-data:/home/scv2/volume"
    networks:
      - external_network

  service_classifier:
    container_name: service_classifier
    image: pacefactory/service-classifier
    profiles: ["ml"]
    restart: always
    depends_on:
      - dbserver
    ipc: host
    environment:
      - "DBSERVER_HOST=dbserver"
    ports:
      - "7373:7373"
    volumes:
      - service_classifier-data:/home/scv2/volume
    networks:
      - external_network

  service_processing:
    container_name: service_processing
    image: pacefactory/service-processing:latest
    profiles: ["proc"]
    restart: always
    depends_on:
      - dbserver
      - service_dtreeserver
      - webgui
    environment:
      - "DB_HOST=dbserver"
      - "CLASSIFIER_HOST=service_dtreeserver"
      - "ML_CLASSIFIER_HOST=service_classifier"
      - "UISERVER_HOST=webgui"
    networks:
      - external_network

  social_web_app:
    container_name: social_web_app
    image: pacefactory/social_web_app
    profiles: ["social"]
    hostname: social_web_app
    restart: always
    ports:
      - "9898:80"
    networks:
      - external_network

  social_video_server:
    container_name: social_video_server
    image: pacefactory/social_video_server
    profiles: ["social"]
    hostname: social_video_server
    restart: always
    ports:
      - "9999:9999"
    volumes:
      - "social_video_server-data:/home/scv2/volume"
    networks:
      - external_network

volumes:
  mongodata:
  dbserver-data:
  realtime-data:
  service_dtreeserver-data:
  service_classifier-data:
  social_video_server-data:
  relational_dbserver-data:
  webgui-data:

networks:
  internal_network:
  external_network:
